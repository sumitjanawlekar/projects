/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.orderManagementRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.CustomerOrganization;
import Business.Organization.LogisticsOrganization;
import Business.Organization.OrderManagementOrganization;
import Business.Organization.Organization;
import Business.Organization.QualityCheckOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import Business.WorkQueue.trashCollectWorkRequest;
import UserInterface.customerRole.requestTrashCollect;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sumitjanawlekar
 */
public class orderManagemntWorkArea extends javax.swing.JPanel {

    /**
     * Creates new form orderManagemntWorkArea
     */
    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private OrderManagementOrganization orderManagementOrganization;
    private Enterprise enterprise;
    
    public orderManagemntWorkArea(JPanel userProcessContainer, UserAccount account, OrderManagementOrganization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        this.enterprise = enterprise;
        this.orderManagementOrganization = organization;
        
        populateTable();
    }
    
        public void populateTable(){
        DefaultTableModel model = (DefaultTableModel)workRequestJTable.getModel();
        
        model.setRowCount(0);
        
        for(WorkRequest request : orderManagementOrganization.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[6];
            row[0] = ((trashCollectWorkRequest)request);
            row[1] = request.getSender().getEmployee().getName();
            row[2] = ((trashCollectWorkRequest)request).getPickedUp();
            row[3] = ((trashCollectWorkRequest)request).getDeliveryBoyName() == null ? "Not yet Assigned" : ((trashCollectWorkRequest)request).getDeliveryBoyName().getEmployee().getName();
            //row[3] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[4] = request.getStatus();
            row[5] = ((trashCollectWorkRequest)request).getQuantityFinalized() == "0" ? null :  ((trashCollectWorkRequest)request).getQuantityFinalized();
            
            
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        processJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        btnLogistics = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 0, 51));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workRequestJTable.setBackground(new java.awt.Color(204, 204, 255));
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Trash Type", "Sender", "Pickup Status", "Delivery Boy Name", "Order Status", "Quantity Finalized"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 64, 659, 96));

        processJButton.setBackground(new java.awt.Color(255, 255, 255));
        processJButton.setText("Request To Quality Check");
        processJButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        processJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJButtonActionPerformed(evt);
            }
        });
        add(processJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(538, 254, -1, -1));

        refreshJButton.setBackground(new java.awt.Color(255, 255, 255));
        refreshJButton.setText("Refresh");
        refreshJButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(538, 200, 131, -1));

        btnLogistics.setBackground(new java.awt.Color(255, 255, 255));
        btnLogistics.setText("Send To Logistics");
        btnLogistics.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnLogistics.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogisticsActionPerformed(evt);
            }
        });
        add(btnLogistics, new org.netbeans.lib.awtextra.AbsoluteConstraints(538, 227, 131, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ORDER MANAGEMENT WORK AREA");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 26, 659, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void processJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJButtonActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        

        trashCollectWorkRequest request = (trashCollectWorkRequest)workRequestJTable.getValueAt(selectedRow, 0);
        if(request.getPickedUp().equalsIgnoreCase("Delivered")){
            request.setStatus("Sent to Quality Check");
            Organization org = null;
            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
                if (organization instanceof QualityCheckOrganization){
                    org = organization;
                    break;
                }
            }
            if (org!=null){
                org.getWorkQueue().getWorkRequestList().add(request);
                userAccount.getWorkQueue().getWorkRequestList().add(request);
            
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Item not yet delivered");
        }
    }//GEN-LAST:event_processJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void btnLogisticsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogisticsActionPerformed
        
        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        trashCollectWorkRequest request = (trashCollectWorkRequest)workRequestJTable.getValueAt(selectedRow, 0);
        if(request.getPickedUp().equalsIgnoreCase("Delivered")){
            JOptionPane.showMessageDialog(null, "Item already delivered");
        }
        else{
               Organization or = null;
        for(Network network : business.getNetworkList()){
            for(Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
                for(Organization org :  enterprise.getOrganizationDirectory().getOrganizationList()){
                    if(org instanceof LogisticsOrganization){
                        or = org;
                        break;
                    }
                }
            }
        }
        if(or != null){
            or.getWorkQueue().getWorkRequestList().add(request);
            userAccount.getWorkQueue().getWorkRequestList().add(request);
        } 
        }
     
        
    }//GEN-LAST:event_btnLogisticsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogistics;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton processJButton;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
